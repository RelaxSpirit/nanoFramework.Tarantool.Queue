// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.

using System;
using nanoFramework.Tarantool.Queue.Model;
using nanoFramework.Tarantool.Queue.Model.Enums;

namespace nanoFramework.Tarantool.Queue.Client.Interfaces
{
    /// <summary>
    /// <see cref="Tarantool"/>.<see cref="Queue"/> interface.
    /// </summary>
    public interface IQueue : IDisposable
    {
        /// <summary>
        /// Gets client session uuid. Be careful, UUID here is a 16-bit string generated by uuid.bin(), not an object of type UUID.
        /// </summary>
        string SessionUuid { get; }

        /// <summary>
        /// Gets <see cref="Tarantool"/>.<see cref="Queue"/> version.
        /// </summary>
        string Version { get; }

        /// <summary>
        /// Gets Gets <see cref="Tarantool"/>.<see cref="Queue"/> state.
        /// </summary>
        /// <returns>Value of <see cref="QueueState"/> enum.</returns>
        QueueState GetState();

        /// <summary>
        /// Gets <see cref="Tarantool"/>.<see cref="Queue"/> statistics.
        /// </summary>
        /// <returns>New instance of <see cref="QueueTubeStatistic"/></returns>
        QueueStatistic GetStatistics();
        
        /// <summary>
        /// Gets <see cref="Tube"/> instance.
        /// </summary>
        /// <param name="tubeName">Tube name.</param>
        /// <returns><see cref="ITube"/> interface.</returns>
        ITube this[string tubeName] { get; }
    }
}
